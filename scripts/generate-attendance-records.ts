/**
 * ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• attendance records ‡∏à‡∏≥‡∏•‡∏≠‡∏á
 * ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô "‡∏ô‡∏≤‡∏¢A" ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2568 (20 ‡∏ß‡∏±‡∏ô)
 */

import { createClient } from '@supabase/supabase-js';
import { Database } from '../types/supabase';
import * as fs from 'fs';
import * as path from 'path';

// ‡πÇ‡∏´‡∏•‡∏î .env.local
const envPath = path.resolve(process.cwd(), '.env.local');
if (fs.existsSync(envPath)) {
  const envContent = fs.readFileSync(envPath, 'utf8').replace(/^\uFEFF/, '');
  envContent.split(/\r?\n/).forEach(line => {
    const trimmedLine = line.trim();
    if (trimmedLine && !trimmedLine.startsWith('#')) {
      const match = trimmedLine.match(/^([^=]+)=(.*)$/);
      if (match) {
        const key = match[1].trim();
        const value = match[2].trim();
        if (!process.env[key]) {
          process.env[key] = value;
        }
      }
    }
  });
}

const supabaseUrl = process.env.SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
const supabase = createClient<Database>(supabaseUrl, supabaseKey);

interface EmployeeData {
  id: string;
  name: string;
  employee_code: string | null;
}

interface StoreData {
  id: string;
  name: string;
  latitude: number | null;
  longitude: number | null;
}

async function main() {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• attendance records ‡∏à‡∏≥‡∏•‡∏≠‡∏á...\n');

  // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô "‡∏ô‡∏≤‡∏¢A"
  console.log('üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô "‡∏ô‡∏≤‡∏¢A"...');
  const { data: employees, error: empError } = await supabase
    .from('employees')
    .select('id, name, employee_code')
    .ilike('name', '%‡∏ô‡∏≤‡∏¢A%')
    .limit(1);

  if (empError || !employees || employees.length === 0) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô "‡∏ô‡∏≤‡∏¢A" ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
    console.error('Error:', empError);
    return;
  }

  const employee = employees[0] as EmployeeData;
  console.log(`‚úÖ ‡∏û‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô: ${employee.name} (ID: ${employee.id})\n`);

  // 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô "KPF"
  console.log('üè™ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏ô "KPF"...');
  const { data: stores, error: storeError } = await supabase
    .from('stores')
    .select('id, name, latitude, longitude')
    .ilike('name', '%KPF%')
    .limit(1);

  if (storeError || !stores || stores.length === 0) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡πâ‡∏≤‡∏ô "KPF" ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
    console.error('Error:', storeError);
    return;
  }

  const store = stores[0] as StoreData;
  console.log(`‚úÖ ‡∏û‡∏ö‡∏£‡πâ‡∏≤‡∏ô: ${store.name}`);
  console.log(`   GPS: ${store.latitude}, ${store.longitude}\n`);

  // 3. ‡∏™‡∏∏‡πà‡∏° 20 ‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2025
  console.log('üìÖ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏™‡∏∏‡πà‡∏° 20 ‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2568...');

  const year = 2025; // ‡∏õ‡∏µ 2568
  const month = 10; // ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°
  const daysInMonth = 31; // ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°‡∏°‡∏µ 31 ‡∏ß‡∏±‡∏ô

  // ‡∏™‡∏∏‡πà‡∏° 20 ‡∏ß‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
  const selectedDays = new Set<number>();
  while (selectedDays.size < 20) {
    const day = Math.floor(Math.random() * daysInMonth) + 1;
    selectedDays.add(day);
  }

  const sortedDays = Array.from(selectedDays).sort((a, b) => a - b);
  console.log(`‚úÖ ‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ 20 ‡∏ß‡∏±‡∏ô: ${sortedDays.join(', ')}\n`);

  // 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• attendance records
  console.log('‚è∞ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• check-in ‡πÅ‡∏•‡∏∞ check-out...');

  const attendanceRecords: Database['public']['Tables']['attendance_records']['Insert'][] = [];

  for (const day of sortedDays) {
    const recordedDate = `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;

    // Check-in (‡πÄ‡∏ä‡πâ‡∏≤ 08:00-09:00)
    const checkInHour = 8;
    const checkInMinute = Math.floor(Math.random() * 60);
    const checkInTime = `${String(checkInHour).padStart(2, '0')}:${String(checkInMinute).padStart(2, '0')}`;

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ GPS ‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ (¬±0.0001 degrees ‚âà ¬±10 ‡πÄ‡∏°‡∏ï‡∏£)
    const latVariation = (Math.random() - 0.5) * 0.0002;
    const lngVariation = (Math.random() - 0.5) * 0.0002;

    attendanceRecords.push({
      recorded_date: recordedDate,
      recorded_time: checkInTime,
      status: 'check-in',
      employee_name: employee.name,
      store_name: store.name,
      note: null,
      latitude: store.latitude ? store.latitude + latVariation : null,
      longitude: store.longitude ? store.longitude + lngVariation : null,
      accuracy: Math.floor(Math.random() * 20) + 5, // 5-25 ‡πÄ‡∏°‡∏ï‡∏£
      location_display: store.name,
      photo_public_url: null, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏à‡∏£‡∏¥‡∏á (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á)
      storage_path: null,
      submitted_at: new Date(`${recordedDate}T${checkInTime}:00+07:00`).toISOString(),
    });

    // Check-out (‡πÄ‡∏¢‡πá‡∏ô 17:00-18:00)
    const checkOutHour = 17;
    const checkOutMinute = Math.floor(Math.random() * 60);
    const checkOutTime = `${String(checkOutHour).padStart(2, '0')}:${String(checkOutMinute).padStart(2, '0')}`;

    const latVariation2 = (Math.random() - 0.5) * 0.0002;
    const lngVariation2 = (Math.random() - 0.5) * 0.0002;

    attendanceRecords.push({
      recorded_date: recordedDate,
      recorded_time: checkOutTime,
      status: 'check-out',
      employee_name: employee.name,
      store_name: store.name,
      note: null,
      latitude: store.latitude ? store.latitude + latVariation2 : null,
      longitude: store.longitude ? store.longitude + lngVariation2 : null,
      accuracy: Math.floor(Math.random() * 20) + 5, // 5-25 ‡πÄ‡∏°‡∏ï‡∏£
      location_display: store.name,
      photo_public_url: null, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏à‡∏£‡∏¥‡∏á (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á)
      storage_path: null,
      submitted_at: new Date(`${recordedDate}T${checkOutTime}:00+07:00`).toISOString(),
    });
  }

  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${attendanceRecords.length} records (${sortedDays.length} ‡∏ß‡∏±‡∏ô √ó 2)\n`);

  // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å
  console.log('üìù ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å:');
  attendanceRecords.slice(0, 3).forEach((record, idx) => {
    console.log(`${idx + 1}. ${record.recorded_date} ${record.recorded_time} - ${record.status}`);
    console.log(`   ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô: ${record.employee_name} @ ${record.store_name}`);
    console.log(`   GPS: ${record.latitude?.toFixed(6)}, ${record.longitude?.toFixed(6)}`);
  });
  console.log();

  // 5. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Supabase
  console.log('üíæ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Supabase...');

  const batchSize = 50;
  let successCount = 0;
  let errorCount = 0;

  for (let i = 0; i < attendanceRecords.length; i += batchSize) {
    const batch = attendanceRecords.slice(i, i + batchSize);

    const { data, error } = await supabase
      .from('attendance_records')
      .insert(batch as any);

    if (error) {
      console.error(`   ‚ùå Batch ${Math.floor(i / batchSize) + 1} ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:`, error.message);
      errorCount += batch.length;
    } else {
      console.log(`   ‚úì Batch ${Math.floor(i / batchSize) + 1}: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ${batch.length} records`);
      successCount += batch.length;
    }
  }

  console.log(`\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!`);
  console.log(`   - ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${successCount} records`);
  console.log(`   - ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${errorCount} records`);
  console.log(`\nüìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö`);
  console.log(`   ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô: ${employee.name}`);
  console.log(`   ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2568`);
  console.log(`   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: 20 ‡∏ß‡∏±‡∏ô (${successCount} records)`);
}

main().catch(console.error);
